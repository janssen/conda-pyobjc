package:
  name: pyobjc-framework-quartz
  version: "3.1.1"

source:
  fn: pyobjc-framework-Quartz-3.1.1.tar.gz
  url: https://pypi.python.org/packages/54/48/93a23c09f223b2bfbe86cfb44f00f9f3417845d630fbb04ef9b9103093ce/pyobjc-framework-Quartz-3.1.1.tar.gz
  md5: fadebaecc17338bad9aa1ae45c7fae77
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # noarch_python: True
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - pyobjc-framework-quartz = pyobjc-framework-quartz:main
    #
    # Would create an entry point called pyobjc-framework-quartz that calls pyobjc-framework-quartz.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - pyobjc-core >=3.1.1
    - pyobjc-framework-cocoa >=3.1.1

  run:
    - python
    - pyobjc-core >=3.1.1
    - pyobjc-framework-cocoa >=3.1.1

test:
  # Python imports
  imports:
    - Quartz
    - Quartz.CoreGraphics
    - Quartz.CoreVideo
    - Quartz.ImageIO
    - Quartz.ImageKit
    - Quartz.PDFKit
    - Quartz.QuartzComposer
    - Quartz.QuartzCore
    - Quartz.QuartzFilters
    - Quartz.QuickLookUI

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://pyobjc.sourceforge.net
  license: MIT License
  summary: 'Wrappers for the Quartz frameworks on Mac OS X'
  license_family: MIT

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
